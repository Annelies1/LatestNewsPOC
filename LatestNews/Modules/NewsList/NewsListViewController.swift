//
//  NewsListViewController.swift
//  LatestNews
//
//  Created by avanees on 23/07/2020.
//  Copyright (c) 2020 ave. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class NewsListViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: NewsListPresenterInterface!

    // MARK: - Private properties -
    
    private let newsTableView = UITableView()
    private let emptyResultsLabel = UILabel()
    private let activityIndicator = UIActivityIndicatorView()
    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        configureView()
        presenter.viewDidLoad()
    }
}

// MARK: - Extensions -

extension NewsListViewController: NewsListViewInterface {
    func showResults() {
        emptyResultsLabel.isHidden = true
        newsTableView.isHidden = false
        newsTableView.reloadData()
    }
    
    func showEmptyResultsView() {
        emptyResultsLabel.isHidden = false
    }
    
    func startActivityIndicator() {
        activityIndicator.startAnimating()
    }
    
    func stopActivityIndicator() {
        activityIndicator.stopAnimating()
    }
}

// MARK: - Layout -

extension NewsListViewController: ConfigurableView {
    
    func configureViewProperties() {
        title = "newslist.title".localized()
        view.backgroundColor = Colors.backgroundCanvasColor
    }
    
    func configureSubviews() {
        emptyResultsLabel.isHidden = true
        newsTableView.isHidden = true
        emptyResultsLabel.numberOfLines = 0
        emptyResultsLabel.lineBreakMode = .byWordWrapping
        emptyResultsLabel.text = "newslist.emptyresults".localized()
        
        newsTableView.delegate = self
        newsTableView.dataSource = self
        newsTableView.estimatedRowHeight = 100
        newsTableView.rowHeight = UITableView.automaticDimension
        newsTableView.register(NewsListTableViewCell.self,
                               forCellReuseIdentifier: NewsListTableViewCell.reuseIdentifier)
        view.addSubview(newsTableView)
        
        view.addSubview(activityIndicator)
        view.addSubview(emptyResultsLabel)
    }
    
    func configureLayout() {
        newsTableView.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            newsTableView.topAnchor.constraint(equalTo: view.topAnchor, constant: 0),
            newsTableView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: 0),
            newsTableView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 0),
            newsTableView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: 0)
        ])
        
        activityIndicator.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            activityIndicator.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            activityIndicator.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        ])
        
        emptyResultsLabel.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            emptyResultsLabel.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            emptyResultsLabel.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        ])
    }
}

// MARK: - Table Management -

extension NewsListViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.countNewsItems()
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell: NewsListTableViewCell = tableView.dequeueReusableCell(for: indexPath)
        let newsItemviewModel = presenter.newsItemAtIndex(indexPath)
        cell.update(with: newsItemviewModel)
        return cell
    }
}

extension NewsListViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        presenter.showDetailsForNewsItemAtIndex(indexPath)
    }
}
